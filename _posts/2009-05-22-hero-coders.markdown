--- 
wordpress_id: 162
layout: post
title: Hero Coders?
wordpress_url: http://blog.kopis.de/?p=162
---

    Jeder kennt einen dieser <em>Hero Coder</em>. Sie atmen Sourcecode aus, sobald sie den Mund aufmachen. Hacken, was das Zeug h&auml;lt. Korrigieren Fehler in atemberaubendem Tempo. Aber braucht man sie, um Projekt erfolgreich abzuschliessen? Und tragen sie wirklich langfristig zum Erfolg bei?<p />Meine Antwort lautet: Nein.<p />Und zwar aus dem einfachen Grund, dass Software keine Ein-Mann-Show ist. Heutige Softwareprojekte sind riesengro&szlig;, kompliziert und nur von mehreren guten, eingespielten Entwicklern zu schaffen. Und Sourcecode muss gehegt und gepflegt und nicht in wilder Hackerei zusammengebaut werden. Dazu geh&ouml;rt eine gute Dokumentation, eine ordentliche Architektur und vor allem eingespielte Prozesse, die jeder befolgt. Das m&uuml;ssen keine endlosen Formularkriege sein, aber ein gewissenhaftes Vorgehen der gesamten Mannschaft.<p />Das f&auml;ngt an beim Erstellen und Pflegen von groben und detaillierten Design-Dokumenten, geht &uuml;ber die Nutzung eines Bugtrackers, dem Befolgen eines <em>coding styles</em> bis hin zu guten <em>commit messages</em>. Und nat&uuml;rlich geh&ouml;rt Kommunikation dazu: Jedes Teammitglied muss wissen, wohin das Projekt geht und muss sich mit den anderen abstimmen. Damit meine ich wieder keine endlosen Meetingmarathons, sondern die Verst&auml;ndigung quer &uuml;ber den Schreibtisch. Fragen und Antworten, Lesen der Projektemails und Dokumentation, Querlesen von Sourcecode anderer... und genau da bleibt der <em>hero coder</em> auf der Strecke.<p />Wer sich zum Code schreiben immer einschliesst, keine Designs liest und &Auml;nderungen vornimmt, ohne R&uuml;cksicht auf andere, der geh&ouml;rt f&uuml;r mich nicht in die Kategorie <em>Guter Softwareentwickler</em>. Und seien wir ehrlich: Jeder von uns war schon einmal dieser Typ. ;-)<p />Meine Einstellung zur Softwareentwicklung tendiert in der letzten Zeit aber immer mehr zu dem Begriff <a href="http://en.wikipedia.org/wiki/Software_Craftsmanship">software craftsmanship</a>, d.h. Softwareentwicklung als Handwerks<em>kunst</em> zu sehen und alle dazugeh&ouml;rigen Arbeiten im Einklang mit dieser Vorgabe zu erledigen. Jeder Statiker, jeder Architekt wird mit diesem Begriff etwas anfangen k&ouml;nnen. Leider wird Softwareentwicklung immer noch als kreativer Prozess wahrgenommen, der von krawattenlosen Revoluzzern in einem kreativen Chaos betrieben wird... Aber genau wie bei Statikern oder Architekten sollte sich die Kreativit&auml;t nicht im Handwerk wiederfinden, sondern in der kreativen Auslegung der bestehenden Prozesse.<p />Genau diese Sicht wird hervorragend in dem Artikel <a href="http://www.fastcompany.com/magazine/06/writestuff.html">They Write The Right Stuff</a> beschrieben, der &uuml;ber die Softwareentwicklung f&uuml;r das <a href="http://de.wikipedia.org/wiki/Space_Shuttle">Space Shuttle</a> erz&auml;hlt.
  
