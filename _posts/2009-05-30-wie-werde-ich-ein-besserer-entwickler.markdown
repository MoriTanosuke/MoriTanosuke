--- 
wordpress_id: 161
layout: post
title: Wie werde ich ein besserer Entwickler?
wordpress_url: http://blog.kopis.de/?p=161
---

    In den letzten Tag ist dieses Thema der Dauerbrenner im Netz. &Uuml;berall liest man dar&uuml;ber, &uuml;berall redet man dar&uuml;ber. Und seit einigen Wochen denke ich auch st&auml;ndig dar&uuml;ber nach.<p /><strong>Wie wird man ein besserer Entwickler?</strong><p />Als erstes f&auml;llt mir da immer ein Spruch ein: <em>Es dauert 10 Jahre, um in irgendeinem Thema Experte zu werden.</em> Ich halte mich zwar nur in wenigen Dingen f&uuml;r einen Experten, aber nach meinen Erfahrungen stimmt der Spruch 100%ig. Ich habe 10 Jahre gebraucht, bis ich ganz passable Keyboard+Klavier spielen konnte. Ich habe 10 Jahre gebraucht, bis ich gut programmieren konnte. Ich werde auch 10 Jahre brauchen, bis ich gut im Bodybuilding sein werde. Aber das sind wieder andere Themen... ;-)<p />Wie werde ich also ein besserer Entwickler?<p /><strong>Innerer Antrieb</strong><p />Ich denke, ein guter Entwickler braucht vor allem einen inneren Antrieb. Einen Antrieb, der einen abends vom Sofa hoch und an den Rechner treibt. Der einen dazu bringt, neue Sprachen wie Groovy oder Prolog zu lernen. Der einen dazu bringt, sich mit Continuous Integration zu besch&auml;ftigen. Oder Unmengen B&uuml;cher zu lesen. Dieser Drang bringt einen auch dazu, nicht einfach nur die gestellten Aufgabe zu l&ouml;sen, sondern dabei auch noch Einzelheiten um das eigenen Problem herum aufzunehmen. Das hei&szlig;t, man lernt durch die Probleml&ouml;sung das System selbst besser kennen.<p />Dieser innere Antrieb wird von manchen auch <em>passion</em> genannt, also die Hingabe an die selbst gew&auml;hlte Profession. Wer keinen Spass an der Arbeit hat, ist meiner Meinung nach im falschen Beruf. Wer will schon sein Leben lang etwas tun, zu dem er gar keine Lust hat - und wer will dann auch noch Extra-Zeit aufwenden, um in diesem Bereich besser zu werden...?<p /><strong>Code lesen</strong><p />Das bringt mich eigentlich gleich zum n&auml;chsten wichtigen Punkt, dem Lesen von Code. Nichts hilft mehr in der pers&ouml;nlichen Entwicklung, als den Code anderer Leute anzuschauen. Vielleicht ist das ein gutes Framework, in dem man bestimmte Patterns wiedererkennt. Oder es ist eine Anwendung, die man in einem Open Source Repository wie <a href="http://www.sourceforge.net/">Sourceforge</a> oder <a href="http://github.com">Github</a> anschauen kann. Hat man das Gl&uuml;ck und arbeitet in verschiedenen Projekten mit unterschiedlichen Leuten, sollte man auch den Code der anderen ansehen.<p />Das dient nicht nur der Weiterbildung, sondern hat auch einen ganz pragmatischen Zweck: die Anpassung des eigenen Stils an die Projektvorgabe. Man kann zwar seine eigene Handschrift in die Arbeit einbringen, aber bitte nicht beim <em>code style</em> oder bei der Architektur. Kreativit&auml;t sollte in der Anwendung der Prozesse stattfinden, nicht in Kraut-und-R&uuml;ben-Code. ;-)<p /><strong>Andere Dinge</strong><p />Es gibt viele andere gute Quellen und ich liste hier nur meine Top 5 auf:<p /><ul>
<br />	<li>Podcasts</li> (wie z.B. <a href="http://www.hanselminutes.com/">Hanselminutes</a>, <a href="http://www.heise.de/developer/podcast">ArchitekTOUR</a>, <a href="http://herdingcode.com/">Herding Code</a>)<br />     <li>B&uuml;cher</li> (eBooks, Papier, Online)<br />	<li>Blogs</li> (es gibt hunderte gute Blogs &uuml;ber Softwareentwicklung)<br />	<li>Twitter</li> (viele kluge K&ouml;pfe twittern jeden Tag &uuml;ber ihre Erfahrungen und Arbeit)<br />	<li>Konferenzen</li> (daran muss ich noch arbeiten)<br />
</ul><p />Es gibt so viele M&ouml;glichkeiten, die man nutzen kann. Die man nutzen muss? Auf jeden Fall bieten sich unz&auml;hlige M&ouml;glichkeiten, die eigene Entwicklung voranzutreiben, ohne jeden Tag ein Seminar zu buchen. Man muss nur zupacken.<p />Und auch hier gilt: Wer immer in der eigenen Komfortzone bleibt, macht auch keine Fortschritte. Wer wirklich etwas erreichen will, muss sich st&auml;ndig antreiben und seinem Drang nachgeben. :-)<p />Hat jemand andere Tipps oder Erfahrungen? Gibt es Dinge, die euch geholfen haben, besser zu werden oder neue Dinge zu entdecken? Schreibt einfach einen Kommentar oder antwortet mir per Mail.
  
