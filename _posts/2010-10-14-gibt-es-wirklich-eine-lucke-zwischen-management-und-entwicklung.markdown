--- 
wordpress_id: 38
layout: post
title: "Gibt es wirklich eine L\xC3\xBCcke zwischen Management und Entwicklung?"
wordpress_url: http://blog.kopis.de/?p=38
---

    In den letzten Tagen denke ich wieder viel über <a href="http://istqb.de/">Testing</a>, <a href="http://www.amazon.de/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/kopisde-21">Clean Code</a> und generell den <i>Entwicklungsprozess</i> nach. Und manchmal unterhalte ich mich auch mit anderen, lebenden Menschen darüber. Und dabei kommen sehr unterschiedliche Standpunkte heraus.<p /> Ich glaube zum Beispiel in meiner naiven Art daran, dass jeder in einem Unternehmen daran interessiert ist, eine aufgeräumte Codebasis zu haben und zu halten, damit neue Funktionen schnell und ohne großen Aufwand in die Software aufgenommen werden können. Weiter glaube ich daran, dass jeder daran interessiert ist, den Prozess bis zum Ausrollen der Software so einfach und schnell wie möglich zu gestalten.<p /> Aber anscheinend teilt nicht jeder meine Meinung, und manch einer glaubt sogar daran, dass es in der Softwareentwicklung folgendes der Standard ist:<br /><ul><li>starre Endtermine</li><li>eine große Menge von Funktionen auf einen Schlag implementieren</li> <li>ohne nennenswerte Zeit für Unit Tests auskommen</li><li>Wartungsarbeit am Code nur im Notfall vornehmen</li></ul>Und vor allem<div><ul><li>die Projektleitung hält den Entwickler wissentlich mit zu engen Deadlines dazu an, schlechten Code abzuliefern.</li> </ul>Vielleicht sehe ich das viel zu schwarz/weiß. Aber ich war mittlerweile in genügend Projekten dabei, um verschiedene Ansätze zu kennen. Und auch wenn man seinen Code ohne <a href="http://junit.org/">automatisierte Unit Tests</a> schreibt, wenn man keine <a href="http://hudson-ci.org/">Continuous Integration</a> hat und wenn man nicht die neusten Frameworks einsetzt, kann man qualitativ hochwertigen Code schreiben.</div> <p /><div>Dazu gehört aber neben guten Entwicklern, die <i>Clean Code</i> ernst nehmen und ihren Job nicht nur als Geldmaschine ansehen, auch eine gute Projektleitung, die versteht, dass <i>Clean Code</i> nicht automatisch beim Herunterschreiben von neuen Funktionen entsteht. Guter, wartbarer Code ist kein Nebenprodukt, er ist das Ergebnis einer gemeinsamen Anstrengung des gesamten Teams - und ich schließe ketzerisch die Projektleitung mit ein. ;-)</div>
  
